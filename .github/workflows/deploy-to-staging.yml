name: Deploy to Staging

on:
  push:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Hosting - Install dependencies
      run: cd hosting && yarn install
    - name: Hosting - Test
      run: cd hosting && yarn test
    - name: Hosting - Generate html files for develop
      run: yarn run build
      env:
        NODE_ENV: development
        FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG_DEV }}
        ALGOLIA_CONFIG: ${{ secrets.ALGOLIA_CONFIG_DEV }}
        GA_ADSENSE_ID: ${{ secrets.GA_ADSENSE_ID }}
    - name: Set env to Develop
      uses: w9jds/firebase-action@master
      with:
        args: functions:config:set runtime.env="develop" algolia.appid="${{ secrets.ALGOLIA_APPID_DEV }}" algolia.apikey="${{ secrets.ALGOLIA_APIKEY_DEV }}" algolia.apikeyadmin="${{ secrets.ALGOLIA_APIKEYADMIN_DEV }}" auth.user="${{ secrets.BAUTH_USER }}" auth.password="${{ secrets.BAUTH_PASSWORD }}" --project default
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
    - name: Init functions for develop
      run: cd functions && yarn install && yarn build
      env:
        BAUTH_USER: ${{ secrets.BAUTH_USER }}
        BAUTH_PASSWORD: ${{ secrets.BAUTH_PASSWORD }}
    - name: Deploy to Develop
      uses: w9jds/firebase-action@master
      with:
        args: deploy --only hosting,functions --project default
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
